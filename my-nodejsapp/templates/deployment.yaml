apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-nodejsapp.fullname" . }}
  labels:
    app: {{ include "my-nodejsapp.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "my-nodejsapp.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "my-nodejsapp.name" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.nodeJsImage.repository }}:{{ .Values.nodeJsImage.tag }}"
          imagePullPolicy: {{ .Values.nodeJsImage.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.appEnv }}
              {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
              {{- end }}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: "{{ .Values.nginxImage.repository }}:{{ .Values.nginxImage.tag }}"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Chart.Name }}-nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf